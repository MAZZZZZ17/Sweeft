public class problem4 {
    public static int[] findIntersection(int[] nums1, int[] nums2) {
        Set<Integer> set1 = new HashSet<>(); // putting arrays in 2 sets
        Set<Integer> set2 = new HashSet<>();

        for (int num : nums1) { // add elements of first array in set1
            set1.add(num);
        }
        for (int num : nums2) { // add elements of first array in set2
            set2.add(num);
        }

        // checking which one is smaller and which one is larger
        Set<Integer> smallerSet;
        Set<Integer> largerSet;

        if (set1.size() < set2.size()) {
            smallerSet = set1;
            largerSet = set2;
        } else {
            smallerSet = set2;
            largerSet = set1;
        }

        // Create a set to store the common elements
        Set<Integer> intersection = new HashSet<>();
        
        // check if smallerSet contains largerSet's elements
        for (int num : largerSet) {
            if (smallerSet.contains(num)) {
                intersection.add(num);
            }
        }
        // converting into array to print result in strings
        int[] result = new int[intersection.size()];
        int index = 0;
        for (int num : intersection) {
            result[index++] = num;
        }
        return result;
    }

    public static void main(String[] args) {
    	//example for checking the code
        int[] nums1 = {1, 2, 3, 4, 5};
        int[] nums2 = {3, 4, 4, 5, 6, 7};
        int[] result = findIntersection(nums1, nums2);
        System.out.println(Arrays.toString(result));
    }
}
