public class problem5 {
    public static int lenOfLongSubarr(int[] array, int k) {
        Arrays.sort(array); // sorting the given array

        int maxLength = 0; //  length of the longest subarray with sum k
        int currentSum = 0; // sum of elements
        int start = 0; //  the starting index 

        for (int i = 0; i < array.length; i++) {
            currentSum += array[i]; // add array's element's value to the currentSum

            while (currentSum > k && start < i) { // currentSum is more than k and start index is less than i
                currentSum -= array[start]; // subtracting the value at array[start]
                start++;
            }

            if (currentSum == k) {
                maxLength = Math.max(maxLength, i - start + 1); // we update maxLength
            }
        }

        return maxLength;
    }

    public static void main(String[] args) {
    	//example for checking the code
        int[] array = {6, 2, 2, 3, 4, 1, 1, 2};
        int k = 8;
        int result = lenOfLongSubarr(array, k);
        System.out.println("Result: " + result);
    }
}
